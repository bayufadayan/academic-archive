Software-Defined Networking (SDN) merupakan konsep baru pada jaringan komputer. Dengan memisahkan data plane dan control plane, logika dan algoritme untuk mengatur sebuah jaringan ditempatkan pada kontroler. Saat ini, algoritme yang dipakai untuk menentukan jalur terpendek pada jaringan SDN adalah algoritme Dijkstra. Namun, algoritme Dijkstra memiliki kekurangan, yaitu tidak memperhatikan bandwidth overhead. Sehingga, network congestion akan terjadi jika besar paket yang dikirimkan lebih besar daripada besar bandwidth yang tersedia. Untuk itu, diperlukan modifikasi pada algoritme Dijkstra. Algoritme Dijkstra dimodifikasi dengan menggunakan bandwidth tersedia sebagai cost. Dalam menentukan jalur, algoritme akan memilih jalur yang memiliki bandwidth tersedia yang lebih besar. Dilakukan tiga jenis pengujian di topologi A dan B, yaitu pengujian pencarian jalur 1, pengujian pencarian jalur 2, dan pengujian time convergence. Pengujian pencarian jalur 1 merupakan pengujian yang dilakukan saat tidak terdapat traffic dan perubahan bandwidth pada jaringan. Pengujian pencarian jalur 2 merupakan pengujian yang dilakukan saat terdapat traffic dan perubahan bandwidth pada jaringan. Pengujian time convergence merupakan pengujian dengan menghitung lama waktu algoritme dalam melakukan pemilihan jalur pada pencarian jalur 1 dan 2 di setiap topologi. Pada pengujian jalur 1 dan 2, algoritme Dijkstra berhasil menemukan jalur berdasarkan bandwidth. Saat pengujian time convergence, algoritme bekerja lebih baik pada topologi A saat pencarian jalur 1 dan 2. Rata – rata waktu yang dihasilkan adalah 8,2 detik dan 13,1 detik. Sedangkan pada topologi B, pencarian jalur 1 dan 2 membutuhkan rata – rata waktu sebesar 93 detik dan 114,8 detik.